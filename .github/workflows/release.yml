name: Release Binaries

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"  # Support SemVer + pre-releases

permissions:
  contents: write

jobs:
  build:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux builds
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          # macOS builds
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          # Windows build
          - os: windows
            arch: amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true

      - name: Install Taskfile
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          go mod tidy
          go mod download

      - name: Build for ${{ matrix.os }}/${{ matrix.arch }}
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} task build

      - name: Compress binary
        run: |
          cd dist
          if [ "${{ matrix.os }}" = "windows" ]; then
            tar czf magina-${{ matrix.os }}-${{ matrix.arch }}.tar.gz magina.exe
            rm magina.exe
          else
            tar czf magina-${{ matrix.os }}-${{ matrix.arch }}.tar.gz magina
            rm magina
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: magina-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/*.tar.gz
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Prepare release files
        run: |
          cd dist
          find . -name '*.tar.gz' -exec mv {} . \;
          find . -type d -not -path . -exec rm -rf {} +

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: "CHANGELOG.md"
          version: ${{ github.ref_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: "CHANGELOG.md"
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
